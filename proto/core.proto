syntax = "proto3";

import "google/protobuf/empty.proto";

package remoteldr;

// Remote process execution and control service.
service RemoteLoader {
    // Gets the system information of the server.
    rpc SystemInfo (google.protobuf.Empty) returns (SystemInfoResponse) {}
    // Sends data to the server.
    rpc SendData (Data) returns (google.protobuf.Empty) {}
    // Receives data from the server.
    rpc GetData (DataRequest) returns (Data) {}
    // Executes a Process on the server.
    rpc SpawnProcess (Process) returns (google.protobuf.Empty) {}
}

// A response containing the system information of the server. Used to determine what target to build for.
message SystemInfoResponse {
    // The name of the server. Can be overridden by the server, but defaults to the hostname.
    string server_name = 1;
    // The operating system of the server.
    OperatingSystem os = 2;
    // The architecture of the server.
    Architecture arch = 3;
    // The target triple of the server. Used for cross-compilation.
    string target_triple = 4;
}

// The operating system of the server.
enum OperatingSystem {
    // Unknown operating system.
    UNKNOWN_OS = 0;
    // Windows operating system.
    WINDOWS = 1;
    // Linux operating system.
    LINUX = 2;
    // macOS operating system.
    MACOS = 3;
}

// The architecture of the server.
enum Architecture {
    // Unknown architecture.
    UNKNOWN_ARCH = 0;
    // 32-bit x86 architecture.
    X86 = 1;
    // 64-bit x86 architecture.
    X86_64 = 2;
    // ARM architecture.
    ARM = 3;
    // ARM64 architecture.
    ARM64 = 4;
}

// Data to be sent to the server.
message Data {
    // The data to be sent.
    bytes data = 1;
    // The size of the data.
    string filepath = 2;
}

// Requests data from the server.
message DataRequest {
    // The file path of the data to be requested.
    string filepath = 1;
}

// Process to be executed on the server.
message Process {
    // The Process to be executed.
    string process = 1;
    // The arguments to the Process. Can be empty.
    repeated string args = 2;
    // The environment variables to be set for the Process. Can be empty.
    map<string, string> env = 3;
}